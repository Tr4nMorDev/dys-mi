version: "3.9"

services:
  postgres:
    container_name: postgres-db
    image: postgres:13
    ports:
      - "5437:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  # app:
  #   container_name: node-app
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - POSTGRES_URL=${POSTGRES_URL}
  #     - REDIS_URL=${REDIS_URL} # ðŸ‘‰ THÃŠM DÃ’NG NÃ€Y
  #     - PORT=${PORT}
  #     - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
  #     - JWT_SECRET=${JWT_SECRET}
  #   depends_on:
  #     - postgres
  #     - redis
  #   # command: node dist/server.js # Cháº¡y file build JS tá»« TypeScript
  #   volumes:
  #     - /app/node_modules # Giá»¯ node_modules trong container Ä‘á»ƒ khÃ´ng bá»‹ ghi Ä‘Ã¨
  # - .:/app # Má»Ÿ dÃ²ng nÃ y khi phÃ¡t triá»ƒn, mount toÃ n bá»™ code vÃ o container

  #Prometheus
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - app

  # Grafana
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   depends_on:
  #     - prometheus

volumes:
  postgres-data:
  # grafana-data:
