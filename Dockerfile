# Base image
FROM node:18.20-alpine

WORKDIR /app

# C√†i c√°c g√≥i c·∫ßn thi·∫øt cho Prisma + bash ƒë·ªÉ d√πng wait-for-it.sh
RUN apk add --no-cache openssl-dev bash

# Copy to√†n b·ªô project v√†o
COPY . .

ENV PRISMA_CLI_QUERY_ENGINE_TYPE="binary"
ENV PRISMA_CLI_QUERY_ENGINE_BINARY_TARGETS="linux-musl-openssl-3.0.x"

# C√†i ƒë·∫∑t to√†n b·ªô dependencies (bao g·ªìm c·∫£ dev)
RUN npm install

# Generate Prisma Client
RUN npx prisma generate

# Build m√£ ngu·ªìn TypeScript
RUN npm run build


COPY wait-for-it.sh /usr/local/bin/wait-for-it.sh
# Cho ph√©p wait-for-it ch·∫°y ƒë∆∞·ª£c
RUN chmod +x /usr/local/bin/wait-for-it.sh

# Expose port
EXPOSE 3000

# Ch·ªù database s·∫µn s√†ng tr∆∞·ªõc khi start
ENTRYPOINT ["/usr/local/bin/wait-for-it.sh", "postgres-db:5432", "--timeout=60", "--"]
CMD ["node", "dist/server.js"]


# Kh√¥ng th·ªÉ muiltstage build v√¨ err prisma version =(((

# -------------------------------------
# # üîπ 1. Base image
# # -------------------------------------
# FROM node:18.20-alpine AS base
# WORKDIR /app

# # -------------------------------------
# # üîπ 2. Deps stage - c√†i full deps (c·∫£ dev)
# # -------------------------------------
# FROM base AS deps
# COPY package*.json ./
# RUN npm install  # ‚ùó Kh√¥ng b·ªè dev ƒë·ªÉ build ƒë∆∞·ª£c Prisma


# # -------------------------------------
# # üîπ 3. Build stage
# # -------------------------------------
# FROM base AS builder

# # C√†i OpenSSL dev cho prisma
# RUN apk add --no-cache openssl-dev

# COPY --from=deps /app/node_modules ./node_modules
# COPY --from=deps /app/package*.json ./

# # Copy m√£ ngu·ªìn v√† c·∫•u h√¨nh
# COPY prisma ./prisma
# COPY src ./src
# COPY tsconfig.json ./

# # ‚úÖ Generate client ƒë√∫ng trong m√¥i tr∆∞·ªùng alpine (linux-musl)
# RUN npx prisma generate
# RUN npm run build

# # -------------------------------------
# # üîπ 4. Final stage
# # -------------------------------------
# FROM base AS final

# # C√†i bash ƒë·ªÉ ch·∫°y wait-for-it.sh
# RUN apk add --no-cache bash

# # C√†i wait-for-it
# COPY wait-for-it.sh /usr/local/bin/wait-for-it.sh
# RUN chmod +x /usr/local/bin/wait-for-it.sh

# # Copy c·∫ßn thi·∫øt t·ª´ builder
# COPY --from=builder /app/dist ./dist
# COPY --from=builder /app/prisma ./prisma
# COPY --from=builder /app/node_modules ./node_modules
# COPY --from=builder /app/node_modules/.prisma /app/node_modules/.prisma
# COPY --from=builder /app/package*.json ./

# EXPOSE 3000

# # ‚úÖ Ch·ªù Postgres xong r·ªìi ch·∫°y server
# ENTRYPOINT ["/usr/local/bin/wait-for-it.sh", "postgres-db:5432", "--timeout=60", "--"]
# CMD ["node", "dist/server.js"]
